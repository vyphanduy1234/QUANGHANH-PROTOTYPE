@model QUANGHANH2.Models.BangCap_GiayChungNhan_detailsDB

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>AddDiplomaEmployee</title>
</head>
<body>


    @using (Html.BeginForm("AddDiplomaEmployee", "Diploma", FormMethod.Post, new { onSubmit = "return SubmitFormDiploma(this) " }))
    {
        @Html.AntiForgeryToken()
        <div class="card">
            <div class="card-content">
                <h3 class="modal-title">Thêm bằng cấp - giấy chứng nhận cho nhân viên</h3>
                <div >
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        <div class="form-group col s6 m6 l6">
                            @Html.LabelFor(model => model.SoHieu, "Số hiệu", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SoHieu, new { htmlAttributes = new { @class = "form-control", @id = "sohieu_bangcap" } })
                                @Html.ValidationMessageFor(model => model.SoHieu, "", new { @class = "text-danger", @style = "color: red !important" })
                                <p hidden style="color:red" id="message_dip">Số hiệu đã tồn tại. Hãy nhập lại</p>
                            </div>
                        </div>
                        <div class="form-group col s6 m6 l6">
                            @Html.Label("", "Tên trường", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("MaTruong", (SelectList)ViewBag.listSelect_truong, "Chọn trường", htmlAttributes: new { @class = "form-control", @id = "emp_matruong" })
                            </div>
                            <p hidden style="color:red" id="checkTruongEmpty">Không được để trống</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col s6 m6 l6">
                            @Html.Label("", "Tên chuyên ngành", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <select class="form-control" id="emp_chuyennganh" >
                                    <option disabled>chon chuyen nganh</option>
                                </select>
                                @*@Html.DropDownList("MaChuyenNganh", ViewBag.listSelect_chuyennganh as SelectList, "Chọn chuyên ngành", htmlAttributes: new { @class = "form-control", @id = "emp_chuyennganh" })*@
                            </div>
                            <p hidden style="color:red" id="checkChuyenNganhEmpty">Không được để trống</p>
                        </div>
                        <div class="form-group col s6 m6 l6">
                            @Html.Label("", "Tên trình độ", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <select class="form-control" id="emp_trinhdo">
                                    <option disabled>chon trinh do</option>
                                </select>
                                <p hidden style="color:red" id="checkTrinhDoEmpty">Không được để trống</p>
                                @*@Html.DropDownList("MaTrinhDo", (SelectList)ViewBag.listSelect_trinhdo, "Chọn trình độ", htmlAttributes: new { @class = "form-control", @id = "emp_trinhdo" })*@
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col s6 m6 l6">
                            @Html.LabelFor(model => model.MaBangCap_GiayChungNhan, "Tên bằng cấp", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("MaBangCap_GiayChungNhan", (IEnumerable<SelectListItem>)ViewBag.listSelect_bangcap, "Chọn bằng cấp", htmlAttributes: new { @class = "form-control", @id = "ma_bangcap" })
                                @Html.ValidationMessageFor(model => model.MaBangCap_GiayChungNhan, "", new { @class = "text-danger", @style = "color: red !important" })
                            </div>
                        </div>

                        <div class="form-group col s6 m6 l6">
                            @Html.LabelFor(model => model.NgayCap, "Ngày cấp", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input id="start_time_dip_add" class="form-control" />
                                @Html.EditorFor(model => model.NgayCap, new { htmlAttributes = new { @style = "display: none !important", @class = "form-control datepicker-here", id = "dt_diploma" } })
                                @Html.ValidationMessageFor(model => model.NgayCap, "", new { @class = "text-danger", @style = "color: red !important" })
                                <p hidden style="color:red" id="message_date_dip_add">Không đúng định dạng ngày/tháng/năm. Hãy nhập lại</p>
                                <p hidden style="color:red" id="message_date_error_dip_add">Thời gian không được vượt quá ngày hiện tại. Hãy nhập lại</p>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="form-group col s6 m6 l6">
                            @Html.LabelFor(model => model.MaNV, "Mã nhân viên", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.MaNV, new { htmlAttributes = new { @class = "form-control", @list = "list_nhavien", @id = "dip_empID_add" } })
                                <datalist id="list_nhavien">
                                    @foreach (var item in (IEnumerable<SelectListItem>)ViewBag.listSelect_nhanvien)
                                    {
                                        <option id="@item.Value" value="@item.Text">@item.Text</option>
                                    }
                                </datalist>
                                @Html.ValidationMessageFor(model => model.MaNV, "", new { @class = "text-danger", @style = "color: red !important" })
                            </div>
                            <p hidden style="color:red" id="message_dip_emp">Bằng cấp của nhân viên này đã tồn tại </p>
                        </div>

                        <div class="form-group col s6 m6 l6">
                            @Html.LabelFor(model => model.MaNV, "Tên nhân viên", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                <input type="text" class="form-control " id="nameEmp_show" disabled />
                            </div>

                            <p hidden style="color:red" id="message_checkNameExist_dip_add">Không tìm thấy kết quả. Hãy nhập lại</p>
                        </div>
                    </div>
                    
                    <div class="form-group col s12 m12 l12">
                        <br />
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Thêm" class=" waves-light btn blue darken-2 white-text" id="submit_form_add_dip_emp" />
                            <input type="reset" value="Hủy" class="modal-close waves-light btn blue darken-2 white-text " />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

</body>
</html>
<script>

    $(document).ready(function () {
        var matruong_emp =$('#emp_matruong').val();
        var machuyennganh_emp = $('#emp_chuyennganh').val();
        var matrinhdo_emp= $('#emp_trinhdo').val();
        $('#emp_chuyennganh').attr("disabled", true);
        $('#emp_trinhdo').attr("disabled", true);
        $('#start_time_dip_add').datepicker({ dateFormat: 'dd/mm/yyyy', changeYear: true });
    });
    $('#submit_form_add_dip_emp').click(function () {
        validate_truong_add();
        validate_trinhdo_add();
        validate_chuyennganh_add();
        var ngaycap = $('#start_time_dip_add').val();
        var arr = ngaycap.split('/');
        $('#dt_diploma').val(arr[1] + "/" + arr[0] + "/" + arr[2]);
        
        
    })

    $('#sohieu_bangcap').blur(function () {
        $.ajax({
            url:'@Url.Action("validateIDDiploma", "Diploma")',
            type: "POST",
            data: { id: $(this).val() },
            success: (response) => {
                if (response.success) {
                    $('#message_dip').show();
                    $('#submit_form_add_dip_emp').attr("disabled", true);
                } else {
                    $('#message_dip').hide();
                    $('#submit_form_add_dip_emp').attr("disabled", false);
                }
            },
            error: (response) => {

            },
        })
    });
    $('#emp_trinhdo').change(function () {
        validate_trinhdo_add();
    })
    $('#emp_chuyennganh').change(function () {
        validate_chuyennganh_add();
    })
    $('#emp_matruong').change(function () {
        validate_truong_add();
        matruong_emp = $('#emp_matruong').val();
        $.ajax({
            type: "POST",
            url: '@Url.Action("getTenChuyenNganh", "Diploma")',
            data: { truong_code: $(this).val() },
            success: function (data) {
                var arrChuyenNganh = data.arrChuyenNganh;
                var arrTrinhDo = data.arrTrinhDo
                console.log(arrChuyenNganh)
                console.log(arrTrinhDo)
                if (arrChuyenNganh.length != 0) {
                    console.log('arr cn')
                    $('#emp_chuyennganh').attr("disabled", false);
                    var ddllist = $('#emp_chuyennganh');
                    $('#checkChuyenNganhEmpty').hide();
                    $('#submit_form_diploma').attr("disabled", false);
                    $('#emp_chuyennganh').html("Chọn chuyên ngành");
                    for (var i = 0; i < arrChuyenNganh.length; i++) {
                        ddllist.append($('<option></option>').val(arrChuyenNganh[i].MaChuyenNganh).html(arrChuyenNganh[i].TenChuyenNganh));
                    }
                } else {
                    $('#emp_chuyennganh').html("Chọn chuyên ngành");
                    $('#emp_chuyennganh').attr("disabled", true);
                }
                if (arrTrinhDo.length != 0) {
                    console.log('arr td')
                    $('#emp_trinhdo').html("Chọn trình độ");
                    $('#emp_trinhdo').attr("disabled", false);
                    var ddllist = $('#emp_trinhdo');
                    for (var i = 0; i < arrTrinhDo.length; i++) {
                        ddllist.append($('<option></option>').val(arrTrinhDo[i].MaTrinhDo).html(arrTrinhDo[i].TenTrinhDo));
                    }
                    $('#checkTrinhDoEmpty').hide();
                    $('#submit_form_diploma').attr("disabled", false);
                } else {
                    $('#emp_trinhdo').html("Chọn trình độ");
                    $('#emp_trinhdo').attr("disabled", true);
                }
            }
            ,
            error: function () {
               // alert('Đéo dc');
            }
        });

    })

    $('#dip_empID_add').change(function () {
        
      $.ajax({
            url:'@Url.Action("getName", "Diploma")',
          type: "POST",
          data: { id: $(this).val()},
            success: (response) => {
                if (response.success) {
                    $('#nameEmp_show').val(response.data);
                    $('#message_checkNameExist_dip_add').hide();
                    $('#submit_form_add_dip_emp').attr("disabled", false);
                    checkExist($('#dip_empID_add').val());
                   
                } else {
                    $('#nameEmp_show').val(response.data);
                    $('#message_checkNameExist_dip_add').show();
                    $('#submit_form_add_dip_emp').attr("disabled", true);
                }
            },
            error: (response) => {

            },
        })
    
    });
    $('#ma_bangcap').blur(function () {
        var mabangcap = $(this).val();       
    })
    $('#start_time_dip_add').blur(function () {
        //alert("adasds");
        var date_now = new Date();
        var date_validate = $('#start_time_dip_add').val();

        var arr = date_validate.split('/');
        var dateformat = arr[1] + "/" + arr[0] + "/" + arr[2];
        var d = new Date(dateformat);
        if (date_validate.trim()) {
            if (testDate(date_validate)) {
                $('#message_date_dip_add').hide();
                if (date_now < d) {

                    $('#message_date_error_dip_add').show();
                    $('#submit_form_add_dip_emp').attr("disabled", true);
                } else {
                    $('#message_date_error_dip_add').hide();
                    $('#submit_form_add_dip_emp').attr("disabled", false);
                }
            }
            else {
                $('#message_date_error_dip_add').hide();
                $('#message_date_dip_add').show();
                $('#submit_form_edit').attr("disabled", true);
            }
        }
        else  {
            $('#message_date_error_dip_add').hide();
        }
    })
    function testDate(str) {
        var t = str.match(/^(\d{2})\/(\d{2})\/(\d{4})$/);
        if (t === null)
            return false;
        var d = +t[1], m = +t[2], y = +t[3];

        // Below should be a more acurate algorithm
        if (m >= 1 && m <= 12 && d >= 1 && d <= 31 && y > 1970 && y < 2100) {
            return true;
        }

        return false;
    }
    function checkExist(code) {
         $.ajax({
            url:'@Url.Action("validateExistDiplomaOfEmp", "Diploma")',
            type: "POST",
             data: { manhanvien: code, mabangcap: $('#ma_bangcap').val()},
            success: (response) => {
                if (response.success) {
                    $('#message_dip_emp').hide();
                    $('#submit_form_add_dip_emp').attr("disabled", false);
                } else {
                    $('#message_exist_bc').text(response.message)
                    $('#message_dip_emp').show();
                    $('#submit_form_add_dip_emp').attr("disabled", true);
                }
            },
                error: (response) => {
                   
            },
            })
        
    }
    function validate_truong_add() {

        if (!$('#emp_matruong').val()) {
            $('#checkTruongEmpty').show();
            $('#submit_form_diploma').attr("disabled", true);
        }
        else {
            $('#checkTruongEmpty').hide();
            $('#submit_form_diploma').attr("disabled", false);
        }
       
    }

   
    function validate_trinhdo_add() {
        
        if (!$('#emp_trinhdo').val()) {
            $('#checkTrinhDoEmpty').show();
            $('#submit_form_diploma').attr("disabled", true);
        }
        else {
            $('#checkTrinhDoEmpty').hide();
            $('#submit_form_diploma').attr("disabled", false);
        }
        
    }
    function validate_chuyennganh_add() {

        if (!$('#emp_chuyennganh').val()) {
            $('#checkChuyenNganhEmpty').show();
            $('#submit_form_diploma').attr("disabled", true);
        }
        else {
            $('#checkChuyenNganhEmpty').hide();
            $('#submit_form_diploma').attr("disabled", false);
        }
        
    }
</script>