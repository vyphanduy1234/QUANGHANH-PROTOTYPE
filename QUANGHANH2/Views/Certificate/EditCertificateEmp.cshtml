@model QUANGHANH2.Models.ChungChi_NhanVien

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>EditCertificateEmp</title>
</head>
<body>
    <div id="edit-modal-body-emp">
        @using (Html.BeginForm("EditCertificateEmp", "Certificate", FormMethod.Post, new { onSubmit = "return SubmitForm(this) " }))
        {
            @Html.AntiForgeryToken()
            <div class="card">
                <div class="card-content">
                    <h3 class="modal-title">Sửa chứng chỉ cho nhân viên</h3>
                    <div class="form-horizontal">
                        <div class="row">
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.SoHieu, "Số hiệu")

                            <div class="form-group col s12 m12 l12">
                                @Html.LabelFor(model => model.NgayCap, "Ngày cấp", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input id="edit_start_time" class="form-control" />
                                    @Html.EditorFor(model => model.NgayCap, "Ngày cấp", new { htmlAttributes = new { @style = "display: none !important", @class = "form-control", @id = "ngaycap_edit_cert" } })
                                    @Html.ValidationMessageFor(model => model.NgayCap, "", new { @class = "text-danger" })
                                    <p hidden style="color:red" id="message_date_edit">Không đúng định dạng ngày/tháng/năm. Hãy nhập lại</p>
                                    <p hidden style="color:red" id="message_date_error_edit">Thời gian không được vượt quá ngày hiện tại. Hãy nhập lại</p>
                                </div>
                            </div>

                            <div class="form-group col s6 m6 l6">
                                @Html.LabelFor(model => model.MaNV, "Mã nhân viên", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.MaNV, new { htmlAttributes = new { @class = "form-control", @list = "list", @id = "manv" } })
                                    <datalist id="list">
                                        @foreach (var item in (IEnumerable<SelectListItem>)ViewBag.List_nhanvien)
                                        {
                                            <option id="@item.Value" value="@item.Text">@item.Text</option>
                                        }
                                    </datalist>
                                    @Html.ValidationMessageFor(model => model.MaNV, "", new { @class = "text-danger" })
                                    <p hidden style="color:red" id="message_checkNameExist_edit">Không tìm thấy kết quả. Hãy nhập lại</p>
                                </div>
                            </div>

                            <div class="form-group col s6 m6 l6">
                                @Html.LabelFor(model => model.MaNV, "Tên nhân viên", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    <input type="text" value="@ViewBag.nameEmp" class="form-control " id="nameEmpEdit" disabled />
                                </div>
                            </div>

                            <div class="form-group col s12 m12 l12">
                                @Html.LabelFor(model => model.MaChungChi, "Tên chứng chỉ", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("MaChungChi", (IEnumerable<SelectListItem>)ViewBag.List_chungchi, htmlAttributes: new { @class = "form-control", @id = "macc_edit" })
                                    @Html.ValidationMessageFor(model => model.MaChungChi, "", new { @class = "text-danger" })
                                    <p hidden style="color:red" id="message_cirt_emp_edit">Chứng chỉ của nhân viên này đã tồn tại. Hãy chọn lại</p>
                                </div>
                            </div>
                            <hr />
                            <div class="form-group col s12 m12 l12">
                                <br />
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Lưu" class=" waves-light btn blue darken-2 white-text " id="submit_form_edit" />
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        }
    </div>
</body>
</html>
@Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function () {
        var date_start_edit = $("#ngaycap_edit_cert").val();
        $("#edit_start_time").val(formatDate(date_start_edit));
        $("#edit_start_time").datepicker({ dateFormat: 'dd/mm/yyyy', changeYear: true });
    });
    function formatDate(date) {
        if (date != null && date != "") {
            var d = new Date(date),
                month = '' + (d.getMonth() + 1),
                day = '' + d.getDate(),
                year = d.getFullYear();

            if (month.length < 2)
                month = '0' + month;
            if (day.length < 2)
                day = '0' + day;

            return [day, month, year].join('/');
        }
        else {
            return date;
        }
    }
    //show name
    $('#manv').change(function () {
        var manv = $(this).val();
      $.ajax({
            url:'@Url.Action("getNameEmployee", "Certificate")',
            type: "POST",
            data: { id: $(this).val() },
            success: (response) => {
                if (response.success) {
                    $('#nameEmpEdit').val(response.data);
                    $('#message_checkNameExist_edit').hide();
                    $('#submit_form_edit').attr("disabled", false);
                } else {
                    $('#nameEmpEdit').val(response.data);
                    $('#message_checkNameExist_edit').show();
                    $('#submit_form_edit').attr("disabled", true);
                }
            },
            error: (response) => {

            },
        })

    });

    var first_cir = $('#macc_edit').val();
    $('#macc_edit').blur(function () {
        var manv = $('#manv').val();
        $.ajax({
            url:'@Url.Action("validateExistCirtificateOfEmp", "Certificate")',
            type: "POST",
                data: {
                    id: $(this).val(),
                    manv: manv,
                    first_cir: first_cir,
                },
            success: (response) => {
                if (response.success) {
                    $('#message_cirt_emp_edit').show();
                    $('#submit_form_edit').attr("disabled", true);
                } else {
                    $('#message_cirt_emp_edit').hide();
                    $('#submit_form_edit').attr("disabled", false);
                    $('#submit_form_edit').closest;
                }
            },
            error: (response) => {

            },
        })
    })
    $('#edit_start_time').blur(function () {
        //alert("adasds");
        var today = new Date();
        var date_validate = $('#edit_start_time').val();

        var arr = date_validate.split('/');
        var dateformat = arr[1] + "/" + arr[0] + "/" + arr[2];
        var d = new Date(dateformat);
        if (date_validate.trim()) {
            if (testDate(date_validate)) {
                $('#message_date_edit').hide();
                if (today < d) {
                    $('#message_date_error_edit').show();
                    $('#submit_form').attr("disabled", true);
                } else {
                    $('#message_date_error_edit').hide();
                    $('#submit_form_edit').attr("disabled", false);
                }

            }
            else {
                $('#message_date_error_edit').hide();
                $('#message_date_edit').show();
                $('#submit_form_edit').attr("disabled", true);
            }
        }
        else {
            $('#message_date_edit').hide();
            $('#message_date_error_edit').hide();
            $('#submit_form_edit').attr("disabled", false);
        }
    })
    function testDate(str) {
        var t = str.match(/^(\d{2})\/(\d{2})\/(\d{4})$/);
        if (t === null)
            return false;
        var d = +t[1], m = +t[2], y = +t[3];

        // Below should be a more acurate algorithm
        if (m >= 1 && m <= 12 && d >= 1 && d <= 31&&y>1970&&y<2100) {
            return true;
        }

        return false;
    }
    $('#submit_form_edit').click(function () {
        var ngaycap = $('#edit_start_time').val();
        var arr = ngaycap.split('/');
        $('#ngaycap_edit_cert').val(arr[1] + "/" + arr[0] + "/" + arr[2]);
    })
</script>
